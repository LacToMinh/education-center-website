import React, { useEffect, useState } from "react";
import ReactDOM from "react-dom";

// Link nh·∫≠n h·ªì s∆° (ƒë·ªïi theo c·ªßa b·∫°n)
const APPLY_LINK = "https://zalo.me/0369984849";

const JOBS = [
  {
    id: "hrm",
    title: "Qu·∫£n l√Ω nh√¢n s·ª±",
    badge: "Full-time",
    summary:
      "Ph·ª• tr√°ch tuy·ªÉn d·ª•ng ‚Äì ƒë√†o t·∫°o ‚Äì ch·∫•m c√¥ng ‚Äì l∆∞∆°ng th∆∞·ªüng; x√¢y d·ª±ng vƒÉn ho√° n·ªôi b·ªô.",
    responsibilities: [
      "X√¢y d·ª±ng k·∫ø ho·∫°ch tuy·ªÉn d·ª•ng theo t·ª´ng qu√Ω.",
      "Onboarding, ƒë√†o t·∫°o quy tr√¨nh ‚Äì KPI.",
      "Qu·∫£n l√Ω h·ªì s∆° lao ƒë·ªông, HƒêLƒê, BHXH.",
      "T·ªïng h·ª£p ch·∫•m c√¥ng, ƒë·ªÅ xu·∫•t l∆∞∆°ng th∆∞·ªüng ‚Äì ph√∫c l·ª£i.",
      "T·ªï ch·ª©c ho·∫°t ƒë·ªông g·∫Øn k·∫øt n·ªôi b·ªô.",
    ],
    requirements: [
      "T·ªët nghi·ªáp Cƒê/ƒêH kh·ªëi Kinh t·∫ø/Qu·∫£n tr·ªã/Nh√¢n s·ª±.",
      "Kinh nghi·ªám HR 1‚Äì2 nƒÉm (∆∞u ti√™n gi√°o d·ª•c).",
      "Th√†nh th·∫°o Excel, giao ti·∫øp t·ªët, b·∫£o m·∫≠t th√¥ng tin.",
    ],
  },
  {
    id: "teacher",
    title: "Gi√°o vi√™n",
    badge: "Part-time / Full-time",
    summary:
      "Gi·∫£ng d·∫°y theo gi√°o tr√¨nh trung t√¢m; theo s√°t ti·∫øn ƒë·ªô ‚Äì k·∫øt qu·∫£ h·ªçc vi√™n.",
    responsibilities: [
      "So·∫°n gi√°o √°n b√°m s√°t ch∆∞∆°ng tr√¨nh & m·ª•c ti√™u l·ªõp.",
      "Gi·∫£ng d·∫°y, qu·∫£n l√Ω l·ªõp, ph·ªëi h·ª£p tr·ª£ gi·∫£ng.",
      "ƒê√°nh gi√° ƒë·ªãnh k·ª≥, ph·∫£n h·ªìi ph·ª• huynh/h·ªçc vi√™n.",
      "Tham gia ƒë√†o t·∫°o n·ªôi b·ªô, n√¢ng cao chuy√™n m√¥n.",
    ],
    requirements: [
      "T·ªët nghi·ªáp Cƒê/ƒêH chuy√™n ng√†nh ph√π h·ª£p.",
      "Ph√°t √¢m/ki·∫øn th·ª©c chu·∫©n (v·ªõi m√¥n ti·∫øng Anh: ∆∞u ti√™n IELTS/TOEIC).",
      "K·ªπ nƒÉng s∆∞ ph·∫°m, truy·ªÅn ƒë·∫°t d·ªÖ hi·ªÉu, ƒë√∫ng gi·ªù.",
    ],
  },
  {
    id: "ta",
    title: "Tr·ª£ gi·∫£ng",
    badge: "Part-time",
    summary:
      "H·ªó tr·ª£ gi√°o vi√™n tr√™n l·ªõp, ch·∫•m b√†i ‚Äì theo d√µi ti·∫øn ƒë·ªô h·ªçc vi√™n.",
    responsibilities: [
      "ƒêi·ªÉm danh, s·∫Øp x·∫øp l·ªõp, h·ªó tr·ª£ d·ª•ng c·ª• h·ªçc t·∫≠p.",
      "Ch·∫•m b√†i, gi·∫£i ƒë√°p th·∫Øc m·∫Øc c·ªßa h·ªçc vi√™n.",
      "Ghi nh·∫≠n ti·∫øn ƒë·ªô ‚Äì th√°i ƒë·ªô h·ªçc t·∫≠p ƒë·ªÉ b√°o c√°o.",
      "Ph·ªëi h·ª£p t·ªï ch·ª©c ki·ªÉm tra ƒë·ªãnh k·ª≥.",
    ],
    requirements: [
      "Sinh vi√™n nƒÉm 2+ ho·∫∑c ƒë√£ t·ªët nghi·ªáp.",
      "N·∫Øm ch·∫Øc ki·∫øn th·ª©c b·ªô m√¥n; giao ti·∫øp th√¢n thi·ªán.",
      "Ch·ªß ƒë·ªông, tr√°ch nhi·ªám, y√™u th√≠ch l√†m vi·ªác v·ªõi h·ªçc sinh.",
    ],
  },
  {
    id: "reception",
    title: "L·ªÖ t√¢n",
    badge: "Part-time / Full-time",
    summary:
      "ƒê√≥n ti·∫øp ph·ª• huynh ‚Äì h·ªçc vi√™n, t∆∞ v·∫•n kho√° h·ªçc, h·ªó tr·ª£ th·ªß t·ª•c & CSKH.",
    responsibilities: [
      "Ti·∫øp nh·∫≠n ‚Äì gi·∫£i ƒë√°p th√¥ng tin kh√≥a h·ªçc t·∫°i qu·∫ßy/ƒëi·ªán tho·∫°i.",
      "H∆∞·ªõng d·∫´n nh·∫≠p h·ªçc, thu ph√≠ ‚Äì xu·∫•t ho√° ƒë∆°n.",
      "Qu·∫£n l√Ω l·ªãch ph√≤ng ‚Äì l·ªõp, h·ªó tr·ª£ s·ª± ki·ªán.",
      "CSKH sau ghi danh, nh·∫Øc l·ªãch h·ªçc/thi.",
    ],
    requirements: [
      "Ngo·∫°i h√¨nh ∆∞a nh√¨n, giao ti·∫øp t·ªët, th√¢n thi·ªán.",
      "Tin h·ªçc vƒÉn ph√≤ng c∆° b·∫£n.",
      "∆Øu ti√™n c√≥ kinh nghi·ªám CSKH/l·ªÖ t√¢n.",
    ],
  },
];

/* ---------- Modal (portal) ---------- */
function JobModal({ job, onClose }) {
  useEffect(() => {
    document.body.classList.add("overflow-hidden");
    const onKey = (e) => e.key === "Escape" && onClose();
    window.addEventListener("keydown", onKey);
    return () => {
      document.body.classList.remove("overflow-hidden");
      window.removeEventListener("keydown", onKey);
    };
  }, [onClose]);

  if (!job) return null;

  return ReactDOM.createPortal(
    <div
      className="fixed inset-0 z-[9999] bg-slate-900/60 backdrop-blur-sm flex items-center justify-center p-4"
      onClick={onClose}
    >
      <div
        className="relative w-[94vw] max-w-[1100px] max-h-[88vh] bg-white rounded-3xl shadow-2xl overflow-hidden flex flex-col"
        onClick={(e) => e.stopPropagation()}
      >
        <button
          onClick={onClose}
          className="absolute right-4 top-4 grid h-10 w-10 place-items-center rounded-full bg-slate-100 text-slate-700 hover:bg-slate-200 transition"
          aria-label="ƒê√≥ng"
          autoFocus
        >
          ‚úï
        </button>

        <div className="px-6 pt-6 pb-3 text-center">
          <div className="inline-block px-3 py-1 rounded-full bg-indigo-50 text-indigo-700 text-xs font-bold">
            {job.badge}
          </div>
          <h2 className="mt-2 text-3xl font-extrabold text-[#001F5D]">{job.title}</h2>
          <p className="mt-2 text-slate-600">{job.summary}</p>
        </div>

        <div className="px-6 pb-4 overflow-auto grid grid-cols-1 md:grid-cols-2 gap-6">
          <div className="rounded-2xl border border-slate-200 p-5 bg-slate-50">
            <h3 className="font-bold text-[#0a1b50] mb-3">üìå Tr√°ch nhi·ªám</h3>
            <ul className="space-y-2 list-disc pl-5 text-[15px] leading-6">
              {job.responsibilities.map((t, i) => (
                <li key={i}>{t}</li>
              ))}
            </ul>
          </div>

          <div className="rounded-2xl border border-slate-200 p-5 bg-slate-50">
            <h3 className="font-bold text-[#0a1b50] mb-3">‚úÖ Y√™u c·∫ßu</h3>
            <ul className="space-y-2 list-disc pl-5 text-[15px] leading-6">
              {job.requirements.map((t, i) => (
                <li key={i}>{t}</li>
              ))}
            </ul>
          </div>
        </div>

        <div className="px-6 pb-6 pt-2">
          <a
            href={APPLY_LINK}
            target="_blank"
            rel="noopener noreferrer"
            className="block w-full text-center rounded-2xl bg-[#001F5D] py-4 text-white text-[18px] font-semibold hover:opacity-95 active:scale-[0.99] transition"
          >
            ·ª®NG TUY·ªÇN NGAY
          </a>
        </div>
      </div>
    </div>,
    document.body
  );
}

/* ---------- Section Tuy·ªÉn d·ª•ng (cards ƒë·ªìng nh·∫•t chi·ªÅu cao) ---------- */
export default function RecruitmentSection() {
  const [activeJob, setActiveJob] = useState(null);

  return (
    <section className="container mx-auto px-4 py-24" id="tuyendung">
      <header className="mb-20 flex flex-col items-center justify-center">
        <h2 className="text-3xl md:text-4xl font-extrabold text-[#001F5D]">
          Tuy·ªÉn d·ª•ng
        </h2>
        <p className="text-slate-600 mt-1">
          C√πng ch√∫ng t√¥i x√¢y d·ª±ng m√¥i tr∆∞·ªùng h·ªçc t·∫≠p vui ‚Äì hi·ªáu qu·∫£.
        </p>
      </header>

      {/* items-stretch ƒë·∫£m b·∫£o c√°c card cao ƒë·ªÅu nhau */}
      <div className="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-4 gap-6 items-stretch">
        {JOBS.map((job) => (
          <article
            key={job.id}
            className="group flex flex-col justify-between rounded-2xl border border-slate-200 bg-white p-5 shadow-sm hover:shadow-md transition"
          >
            {/* Ph·∫ßn tr√™n */}
            <div>
              <div className="flex items-start justify-between">
                <h3 className="text-xl font-extrabold text-slate-800">
                  {job.title}
                </h3>
                <span className="px-2 py-0.5 rounded-full text-xs font-bold bg-green-100 text-green-700">
                  {job.badge}
                </span>
              </div>
              <p className="mt-3 text-slate-600">{job.summary}</p>
            </div>

            {/* Footer lu√¥n ·ªü ƒë√°y card */}
            <div className="mt-5 flex items-center justify-between">
              <button
                className="text-[#001F5D] font-semibold underline underline-offset-4 hover:no-underline"
                onClick={() => setActiveJob(job)}
              >
                Xem chi ti·∫øt
              </button>
              <a
                href={APPLY_LINK}
                target="_blank"
                rel="noopener noreferrer"
                className="rounded-xl bg-[#001F5D] text-white px-3 py-2 text-sm font-semibold hover:opacity-95"
              >
                ·ª®ng tuy·ªÉn
              </a>
            </div>
          </article>
        ))}
      </div>

      {/* Modal */}
      {activeJob && (
        <JobModal job={activeJob} onClose={() => setActiveJob(null)} />
      )}
    </section>
  );
}
